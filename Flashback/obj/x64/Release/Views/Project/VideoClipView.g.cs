#pragma checksum "C:\Users\Lucas Oropeza\Desktop\EYE TRACKING DESKTOP\PR-EyeTracking-Desktop\Flashback\Views\Project\VideoClipView.xaml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "C7D24DC432B4EC2215691BBDCE61B5A1616BF578C660417B354FEDD3878A80DD"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Flashback.Views
{
    partial class VideoClipView : 
        global::Windows.UI.Xaml.Controls.UserControl, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Helpers_Controls_RangeSlider_Start(global::Helpers.Controls.RangeSlider obj, global::System.Double value)
            {
                obj.Start = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_TextBlock_Text(global::Windows.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_Helpers_Controls_RangeSlider_End(global::Helpers.Controls.RangeSlider obj, global::System.Double value)
            {
                obj.End = value;
            }
            public static void Set_Helpers_Controls_RangeSlider_Maximum(global::Helpers.Controls.RangeSlider obj, global::System.Double value)
            {
                obj.Maximum = value;
            }
            public static void Set_Helpers_Controls_ProgressOverlay_ProgressObject(global::Helpers.Controls.ProgressOverlay obj, global::Helpers.Controls.ProgressObject value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Helpers.Controls.ProgressObject) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Helpers.Controls.ProgressObject), targetNullValue);
                }
                obj.ProgressObject = value;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class VideoClipView_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IVideoClipView_Bindings
        {
            private global::Flashback.Views.VideoClipView dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private global::Windows.UI.Xaml.ResourceDictionary localResources;
            private global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement> converterLookupRoot;

            // Fields for each control that has bindings.
            private global::Helpers.Controls.RangeSlider obj2;
            private global::Windows.UI.Xaml.Controls.TextBlock obj3;
            private global::Windows.UI.Xaml.Controls.TextBlock obj4;
            private global::Windows.UI.Xaml.Controls.TextBlock obj5;
            private global::Helpers.Controls.ProgressOverlay obj7;

            private VideoClipView_obj1_BindingsTracking bindingsTracking;

            public VideoClipView_obj1_Bindings()
            {
                this.bindingsTracking = new VideoClipView_obj1_BindingsTracking(this);
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 2: // Views\Project\VideoClipView.xaml line 82
                        this.obj2 = (global::Helpers.Controls.RangeSlider)target;
                        this.bindingsTracking.RegisterTwoWayListener_2(this.obj2);
                        break;
                    case 3: // Views\Project\VideoClipView.xaml line 67
                        this.obj3 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 4: // Views\Project\VideoClipView.xaml line 72
                        this.obj4 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 5: // Views\Project\VideoClipView.xaml line 77
                        this.obj5 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 7: // Views\Project\VideoClipView.xaml line 49
                        this.obj7 = (global::Helpers.Controls.ProgressOverlay)target;
                        break;
                    default:
                        break;
                }
            }

            // IVideoClipView_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::Flashback.Views.VideoClipView)newDataRoot;
                    return true;
                }
                return false;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }
            public void SetConverterLookupRoot(global::Windows.UI.Xaml.FrameworkElement rootElement)
            {
                this.converterLookupRoot = new global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement>(rootElement);
            }

            public global::Windows.UI.Xaml.Data.IValueConverter LookupConverter(string key)
            {
                if (this.localResources == null)
                {
                    global::Windows.UI.Xaml.FrameworkElement rootElement;
                    this.converterLookupRoot.TryGetTarget(out rootElement);
                    this.localResources = rootElement.Resources;
                    this.converterLookupRoot = null;
                }
                return (global::Windows.UI.Xaml.Data.IValueConverter) (this.localResources.ContainsKey(key) ? this.localResources[key] : global::Windows.UI.Xaml.Application.Current.Resources[key]);
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::Flashback.Views.VideoClipView obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_VideoClip(obj.VideoClip, phase);
                        this.Update_PreviewMediaElementProgressObject(obj.PreviewMediaElementProgressObject, phase);
                    }
                }
            }
            private void Update_VideoClip(global::Flashback.Models.VideoClip obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_VideoClip(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_VideoClip_StartTime(obj.StartTime, phase);
                        this.Update_VideoClip_EndTime(obj.EndTime, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_VideoClip_OriginalDuration(obj.OriginalDuration, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_VideoClip_Duration(obj.Duration, phase);
                    }
                }
            }
            private void Update_VideoClip_StartTime(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Project\VideoClipView.xaml line 82
                    XamlBindingSetters.Set_Helpers_Controls_RangeSlider_Start(this.obj2, obj);
                    // Views\Project\VideoClipView.xaml line 67
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj3, (global::System.String)this.LookupConverter("SecondsToTimeSpanStringConverter").Convert(obj, typeof(global::System.String), null, null), null);
                }
            }
            private void Update_VideoClip_EndTime(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Project\VideoClipView.xaml line 82
                    XamlBindingSetters.Set_Helpers_Controls_RangeSlider_End(this.obj2, obj);
                    // Views\Project\VideoClipView.xaml line 77
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj5, (global::System.String)this.LookupConverter("SecondsToTimeSpanStringConverter").Convert(obj, typeof(global::System.String), null, null), null);
                }
            }
            private void Update_VideoClip_OriginalDuration(global::System.TimeSpan obj, int phase)
            {
                if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                {
                    this.Update_VideoClip_OriginalDuration_TotalSeconds(obj.TotalSeconds, phase);
                }
            }
            private void Update_VideoClip_OriginalDuration_TotalSeconds(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\Project\VideoClipView.xaml line 82
                    XamlBindingSetters.Set_Helpers_Controls_RangeSlider_Maximum(this.obj2, obj);
                }
            }
            private void Update_VideoClip_Duration(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Project\VideoClipView.xaml line 72
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj4, (global::System.String)this.LookupConverter("SecondsToTimeSpanStringConverter").Convert(obj, typeof(global::System.String), null, null), null);
                }
            }
            private void Update_PreviewMediaElementProgressObject(global::Helpers.Controls.ProgressObject obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_PreviewMediaElementProgressObject(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Project\VideoClipView.xaml line 49
                    XamlBindingSetters.Set_Helpers_Controls_ProgressOverlay_ProgressObject(this.obj7, obj, null);
                }
            }
            private void UpdateTwoWay_2_Start()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.VideoClip != null)
                        {
                            this.dataRoot.VideoClip.StartTime = this.obj2.Start;
                        }
                    }
                }
            }
            private void UpdateTwoWay_2_End()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.VideoClip != null)
                        {
                            this.dataRoot.VideoClip.EndTime = this.obj2.End;
                        }
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class VideoClipView_obj1_BindingsTracking
            {
                private global::System.WeakReference<VideoClipView_obj1_Bindings> weakRefToBindingObj; 

                public VideoClipView_obj1_BindingsTracking(VideoClipView_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<VideoClipView_obj1_Bindings>(obj);
                }

                public VideoClipView_obj1_Bindings TryGetBindingObject()
                {
                    VideoClipView_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_(null);
                    UpdateChildListeners_VideoClip(null);
                    UpdateChildListeners_PreviewMediaElementProgressObject(null);
                }

                public void DependencyPropertyChanged_VideoClip(global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop)
                {
                    VideoClipView_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::Flashback.Views.VideoClipView obj = sender as global::Flashback.Views.VideoClipView;
                        if (obj != null)
                        {
                            bindings.Update_VideoClip(obj.VideoClip, DATA_CHANGED);
                        }
                    }
                }
                private long tokenDPC_VideoClip = 0;
                public void UpdateChildListeners_(global::Flashback.Views.VideoClipView obj)
                {
                    VideoClipView_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        if (bindings.dataRoot != null)
                        {
                            bindings.dataRoot.UnregisterPropertyChangedCallback(global::Flashback.Views.VideoClipView.VideoClipProperty, tokenDPC_VideoClip);
                        }
                        if (obj != null)
                        {
                            bindings.dataRoot = obj;
                            tokenDPC_VideoClip = obj.RegisterPropertyChangedCallback(global::Flashback.Views.VideoClipView.VideoClipProperty, DependencyPropertyChanged_VideoClip);
                        }
                    }
                }
                public void PropertyChanged_VideoClip(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    VideoClipView_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Flashback.Models.VideoClip obj = sender as global::Flashback.Models.VideoClip;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_VideoClip_StartTime(obj.StartTime, DATA_CHANGED);
                                bindings.Update_VideoClip_EndTime(obj.EndTime, DATA_CHANGED);
                                bindings.Update_VideoClip_Duration(obj.Duration, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "StartTime":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_VideoClip_StartTime(obj.StartTime, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "EndTime":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_VideoClip_EndTime(obj.EndTime, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Duration":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_VideoClip_Duration(obj.Duration, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::Flashback.Models.VideoClip cache_VideoClip = null;
                public void UpdateChildListeners_VideoClip(global::Flashback.Models.VideoClip obj)
                {
                    if (obj != cache_VideoClip)
                    {
                        if (cache_VideoClip != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_VideoClip).PropertyChanged -= PropertyChanged_VideoClip;
                            cache_VideoClip = null;
                        }
                        if (obj != null)
                        {
                            cache_VideoClip = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_VideoClip;
                        }
                    }
                }
                public void PropertyChanged_PreviewMediaElementProgressObject(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    VideoClipView_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Helpers.Controls.ProgressObject obj = sender as global::Helpers.Controls.ProgressObject;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::Helpers.Controls.ProgressObject cache_PreviewMediaElementProgressObject = null;
                public void UpdateChildListeners_PreviewMediaElementProgressObject(global::Helpers.Controls.ProgressObject obj)
                {
                    if (obj != cache_PreviewMediaElementProgressObject)
                    {
                        if (cache_PreviewMediaElementProgressObject != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_PreviewMediaElementProgressObject).PropertyChanged -= PropertyChanged_PreviewMediaElementProgressObject;
                            cache_PreviewMediaElementProgressObject = null;
                        }
                        if (obj != null)
                        {
                            cache_PreviewMediaElementProgressObject = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_PreviewMediaElementProgressObject;
                        }
                    }
                }
                public void RegisterTwoWayListener_2(global::Helpers.Controls.RangeSlider sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Helpers.Controls.RangeSlider.StartProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_2_Start();
                        }
                    });
                    sourceObject.RegisterPropertyChangedCallback(global::Helpers.Controls.RangeSlider.EndProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_2_End();
                        }
                    });
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 2: // Views\Project\VideoClipView.xaml line 82
                {
                    this.TrimRangeSlider = (global::Helpers.Controls.RangeSlider)(target);
                    ((global::Helpers.Controls.RangeSlider)this.TrimRangeSlider).PointerCaptureLost += this.TrimRangeSlider_PointerCaptureLost;
                }
                break;
            case 6: // Views\Project\VideoClipView.xaml line 36
                {
                    this.PreviewMediaElement = (global::Windows.UI.Xaml.Controls.MediaElement)(target);
                    ((global::Windows.UI.Xaml.Controls.MediaElement)this.PreviewMediaElement).Loaded += this.PreviewMediaElement_Loaded;
                    ((global::Windows.UI.Xaml.Controls.MediaElement)this.PreviewMediaElement).MediaOpened += this.PreviewMediaElement_MediaOpened;
                    ((global::Windows.UI.Xaml.Controls.MediaElement)this.PreviewMediaElement).CurrentStateChanged += this.PreviewMediaElement_CurrentStateChanged;
                    ((global::Windows.UI.Xaml.Controls.MediaElement)this.PreviewMediaElement).SeekCompleted += this.PreviewMediaElement_SeekCompleted;
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // Views\Project\VideoClipView.xaml line 1
                {                    
                    global::Windows.UI.Xaml.Controls.UserControl element1 = (global::Windows.UI.Xaml.Controls.UserControl)target;
                    VideoClipView_obj1_Bindings bindings = new VideoClipView_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    bindings.SetConverterLookupRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                }
                break;
            }
            return returnValue;
        }
    }
}

