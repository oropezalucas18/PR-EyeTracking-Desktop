#pragma checksum "C:\Users\Lucas Oropeza\Documents\PR-EYE TRACKING\PR-EYE TRACKING HEATMAPS\Flashback\Views\Project\SlideshowClipView.xaml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "09A3CE8180F8D6CD8541E80741612D829AB68802C22218100AC3EC0886697393"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Flashback.Views
{
    partial class SlideshowClipView : 
        global::Windows.UI.Xaml.Controls.UserControl, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(global::Windows.UI.Xaml.Controls.ItemsControl obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.ItemsSource = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Primitives_RangeBase_Value(global::Windows.UI.Xaml.Controls.Primitives.RangeBase obj, global::System.Double value)
            {
                obj.Value = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_TextBlock_Text(global::Windows.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_Helpers_Controls_ProgressOverlay_ProgressObject(global::Helpers.Controls.ProgressOverlay obj, global::Helpers.Controls.ProgressObject value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Helpers.Controls.ProgressObject) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Helpers.Controls.ProgressObject), targetNullValue);
                }
                obj.ProgressObject = value;
            }
            public static void Set_Windows_UI_Xaml_Media_ImageBrush_ImageSource(global::Windows.UI.Xaml.Media.ImageBrush obj, global::Windows.UI.Xaml.Media.ImageSource value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Windows.UI.Xaml.Media.ImageSource) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Windows.UI.Xaml.Media.ImageSource), targetNullValue);
                }
                obj.ImageSource = value;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class SlideshowClipView_obj9_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            ISlideshowClipView_Bindings
        {
            private global::Flashback.Models.SlideshowImage dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj9;
            private global::Windows.UI.Xaml.Media.ImageBrush obj10;

            private SlideshowClipView_obj9_BindingsTracking bindingsTracking;

            public SlideshowClipView_obj9_Bindings()
            {
                this.bindingsTracking = new SlideshowClipView_obj9_BindingsTracking(this);
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 9: // Views\Project\SlideshowClipView.xaml line 164
                        this.obj9 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.Grid)target);
                        break;
                    case 10: // Views\Project\SlideshowClipView.xaml line 172
                        this.obj10 = (global::Windows.UI.Xaml.Media.ImageBrush)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj9.Target as global::Windows.UI.Xaml.Controls.Grid).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::Flashback.Models.SlideshowImage) item, 1 << phase);
            }

            public void Recycle()
            {
                this.bindingsTracking.ReleaseAllListeners();
            }

            // ISlideshowClipView_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::Flashback.Models.SlideshowImage)newDataRoot;
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::Flashback.Models.SlideshowImage obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_Thumbnail(obj.Thumbnail, phase);
                    }
                }
            }
            private void Update_Thumbnail(global::Windows.UI.Xaml.Media.Imaging.BitmapImage obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Project\SlideshowClipView.xaml line 172
                    XamlBindingSetters.Set_Windows_UI_Xaml_Media_ImageBrush_ImageSource(this.obj10, obj, null);
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class SlideshowClipView_obj9_BindingsTracking
            {
                private global::System.WeakReference<SlideshowClipView_obj9_Bindings> weakRefToBindingObj; 

                public SlideshowClipView_obj9_BindingsTracking(SlideshowClipView_obj9_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<SlideshowClipView_obj9_Bindings>(obj);
                }

                public SlideshowClipView_obj9_Bindings TryGetBindingObject()
                {
                    SlideshowClipView_obj9_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_(null);
                }

                public void PropertyChanged_(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    SlideshowClipView_obj9_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Flashback.Models.SlideshowImage obj = sender as global::Flashback.Models.SlideshowImage;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_Thumbnail(obj.Thumbnail, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "Thumbnail":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_Thumbnail(obj.Thumbnail, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void UpdateChildListeners_(global::Flashback.Models.SlideshowImage obj)
                {
                    SlideshowClipView_obj9_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        if (bindings.dataRoot != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)bindings.dataRoot).PropertyChanged -= PropertyChanged_;
                        }
                        if (obj != null)
                        {
                            bindings.dataRoot = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_;
                        }
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class SlideshowClipView_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            ISlideshowClipView_Bindings
        {
            private global::Flashback.Views.SlideshowClipView dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private global::Windows.UI.Xaml.ResourceDictionary localResources;
            private global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement> converterLookupRoot;

            // Fields for each control that has bindings.
            private global::Windows.UI.Xaml.Controls.MenuFlyoutItem obj2;
            private global::Windows.UI.Xaml.Controls.GridView obj6;
            private global::Windows.UI.Xaml.Controls.AppBarButton obj7;
            private global::Windows.UI.Xaml.Controls.Slider obj11;
            private global::Windows.UI.Xaml.Controls.TextBlock obj12;
            private global::Helpers.Controls.ProgressOverlay obj14;

            // Fields for each event bindings event handler.
            private global::Windows.UI.Xaml.RoutedEventHandler obj2Click;
            private global::Windows.UI.Xaml.RoutedEventHandler obj7Click;

            private SlideshowClipView_obj1_BindingsTracking bindingsTracking;

            public SlideshowClipView_obj1_Bindings()
            {
                this.bindingsTracking = new SlideshowClipView_obj1_BindingsTracking(this);
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 2: // Views\Project\SlideshowClipView.xaml line 67
                        this.obj2 = (global::Windows.UI.Xaml.Controls.MenuFlyoutItem)target;
                        this.obj2Click = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.SlideshowClip.DeleteImageMenuFlyoutItem_Click(p0, p1);
                        };
                        ((global::Windows.UI.Xaml.Controls.MenuFlyoutItem)target).Click += obj2Click;
                        break;
                    case 6: // Views\Project\SlideshowClipView.xaml line 159
                        this.obj6 = (global::Windows.UI.Xaml.Controls.GridView)target;
                        break;
                    case 7: // Views\Project\SlideshowClipView.xaml line 185
                        this.obj7 = (global::Windows.UI.Xaml.Controls.AppBarButton)target;
                        this.obj7Click = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.SlideshowClip.AddSlideshowImage();
                        };
                        ((global::Windows.UI.Xaml.Controls.AppBarButton)target).Click += obj7Click;
                        break;
                    case 11: // Views\Project\SlideshowClipView.xaml line 132
                        this.obj11 = (global::Windows.UI.Xaml.Controls.Slider)target;
                        this.bindingsTracking.RegisterTwoWayListener_11(this.obj11);
                        break;
                    case 12: // Views\Project\SlideshowClipView.xaml line 125
                        this.obj12 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 14: // Views\Project\SlideshowClipView.xaml line 105
                        this.obj14 = (global::Helpers.Controls.ProgressOverlay)target;
                        break;
                    default:
                        break;
                }
            }

            // ISlideshowClipView_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::Flashback.Views.SlideshowClipView)newDataRoot;
                    return true;
                }
                return false;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }
            public void SetConverterLookupRoot(global::Windows.UI.Xaml.FrameworkElement rootElement)
            {
                this.converterLookupRoot = new global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement>(rootElement);
            }

            public global::Windows.UI.Xaml.Data.IValueConverter LookupConverter(string key)
            {
                if (this.localResources == null)
                {
                    global::Windows.UI.Xaml.FrameworkElement rootElement;
                    this.converterLookupRoot.TryGetTarget(out rootElement);
                    this.localResources = rootElement.Resources;
                    this.converterLookupRoot = null;
                }
                return (global::Windows.UI.Xaml.Data.IValueConverter) (this.localResources.ContainsKey(key) ? this.localResources[key] : global::Windows.UI.Xaml.Application.Current.Resources[key]);
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::Flashback.Views.SlideshowClipView obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_SlideshowClip(obj.SlideshowClip, phase);
                        this.Update_PreviewMediaElementProgressObject(obj.PreviewMediaElementProgressObject, phase);
                    }
                }
            }
            private void Update_SlideshowClip(global::Flashback.Models.SlideshowClip obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_SlideshowClip(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_SlideshowClip_SlideshowImages(obj.SlideshowImages, phase);
                        this.Update_SlideshowClip_ImageDuration(obj.ImageDuration, phase);
                    }
                }
            }
            private void Update_SlideshowClip_SlideshowImages(global::System.Collections.ObjectModel.ObservableCollection<global::Flashback.Models.SlideshowImage> obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_SlideshowClip_SlideshowImages(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Project\SlideshowClipView.xaml line 159
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj6, obj, null);
                }
            }
            private void Update_SlideshowClip_ImageDuration(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Project\SlideshowClipView.xaml line 132
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_RangeBase_Value(this.obj11, obj);
                    // Views\Project\SlideshowClipView.xaml line 125
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj12, (global::System.String)this.LookupConverter("SecondsToTimeSpanStringConverter").Convert(obj, typeof(global::System.String), null, null), null);
                }
            }
            private void Update_PreviewMediaElementProgressObject(global::Helpers.Controls.ProgressObject obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_PreviewMediaElementProgressObject(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Project\SlideshowClipView.xaml line 105
                    XamlBindingSetters.Set_Helpers_Controls_ProgressOverlay_ProgressObject(this.obj14, obj, null);
                }
            }
            private void UpdateTwoWay_11_Value()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.SlideshowClip != null)
                        {
                            this.dataRoot.SlideshowClip.ImageDuration = this.obj11.Value;
                        }
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class SlideshowClipView_obj1_BindingsTracking
            {
                private global::System.WeakReference<SlideshowClipView_obj1_Bindings> weakRefToBindingObj; 

                public SlideshowClipView_obj1_BindingsTracking(SlideshowClipView_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<SlideshowClipView_obj1_Bindings>(obj);
                }

                public SlideshowClipView_obj1_Bindings TryGetBindingObject()
                {
                    SlideshowClipView_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_(null);
                    UpdateChildListeners_SlideshowClip(null);
                    UpdateChildListeners_SlideshowClip_SlideshowImages(null);
                    UpdateChildListeners_PreviewMediaElementProgressObject(null);
                }

                public void DependencyPropertyChanged_SlideshowClip(global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop)
                {
                    SlideshowClipView_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::Flashback.Views.SlideshowClipView obj = sender as global::Flashback.Views.SlideshowClipView;
                        if (obj != null)
                        {
                            bindings.Update_SlideshowClip(obj.SlideshowClip, DATA_CHANGED);
                        }
                    }
                }
                private long tokenDPC_SlideshowClip = 0;
                public void UpdateChildListeners_(global::Flashback.Views.SlideshowClipView obj)
                {
                    SlideshowClipView_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        if (bindings.dataRoot != null)
                        {
                            bindings.dataRoot.UnregisterPropertyChangedCallback(global::Flashback.Views.SlideshowClipView.SlideshowClipProperty, tokenDPC_SlideshowClip);
                        }
                        if (obj != null)
                        {
                            bindings.dataRoot = obj;
                            tokenDPC_SlideshowClip = obj.RegisterPropertyChangedCallback(global::Flashback.Views.SlideshowClipView.SlideshowClipProperty, DependencyPropertyChanged_SlideshowClip);
                        }
                    }
                }
                public void PropertyChanged_SlideshowClip(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    SlideshowClipView_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Flashback.Models.SlideshowClip obj = sender as global::Flashback.Models.SlideshowClip;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_SlideshowClip_SlideshowImages(obj.SlideshowImages, DATA_CHANGED);
                                bindings.Update_SlideshowClip_ImageDuration(obj.ImageDuration, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "SlideshowImages":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_SlideshowClip_SlideshowImages(obj.SlideshowImages, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "ImageDuration":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_SlideshowClip_ImageDuration(obj.ImageDuration, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::Flashback.Models.SlideshowClip cache_SlideshowClip = null;
                public void UpdateChildListeners_SlideshowClip(global::Flashback.Models.SlideshowClip obj)
                {
                    if (obj != cache_SlideshowClip)
                    {
                        if (cache_SlideshowClip != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_SlideshowClip).PropertyChanged -= PropertyChanged_SlideshowClip;
                            cache_SlideshowClip = null;
                        }
                        if (obj != null)
                        {
                            cache_SlideshowClip = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_SlideshowClip;
                        }
                    }
                }
                public void PropertyChanged_SlideshowClip_SlideshowImages(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    SlideshowClipView_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::System.Collections.ObjectModel.ObservableCollection<global::Flashback.Models.SlideshowImage> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::Flashback.Models.SlideshowImage>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void CollectionChanged_SlideshowClip_SlideshowImages(object sender, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    SlideshowClipView_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::System.Collections.ObjectModel.ObservableCollection<global::Flashback.Models.SlideshowImage> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::Flashback.Models.SlideshowImage>;
                    }
                }
                private global::System.Collections.ObjectModel.ObservableCollection<global::Flashback.Models.SlideshowImage> cache_SlideshowClip_SlideshowImages = null;
                public void UpdateChildListeners_SlideshowClip_SlideshowImages(global::System.Collections.ObjectModel.ObservableCollection<global::Flashback.Models.SlideshowImage> obj)
                {
                    if (obj != cache_SlideshowClip_SlideshowImages)
                    {
                        if (cache_SlideshowClip_SlideshowImages != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_SlideshowClip_SlideshowImages).PropertyChanged -= PropertyChanged_SlideshowClip_SlideshowImages;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)cache_SlideshowClip_SlideshowImages).CollectionChanged -= CollectionChanged_SlideshowClip_SlideshowImages;
                            cache_SlideshowClip_SlideshowImages = null;
                        }
                        if (obj != null)
                        {
                            cache_SlideshowClip_SlideshowImages = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_SlideshowClip_SlideshowImages;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)obj).CollectionChanged += CollectionChanged_SlideshowClip_SlideshowImages;
                        }
                    }
                }
                public void PropertyChanged_PreviewMediaElementProgressObject(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    SlideshowClipView_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Helpers.Controls.ProgressObject obj = sender as global::Helpers.Controls.ProgressObject;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::Helpers.Controls.ProgressObject cache_PreviewMediaElementProgressObject = null;
                public void UpdateChildListeners_PreviewMediaElementProgressObject(global::Helpers.Controls.ProgressObject obj)
                {
                    if (obj != cache_PreviewMediaElementProgressObject)
                    {
                        if (cache_PreviewMediaElementProgressObject != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_PreviewMediaElementProgressObject).PropertyChanged -= PropertyChanged_PreviewMediaElementProgressObject;
                            cache_PreviewMediaElementProgressObject = null;
                        }
                        if (obj != null)
                        {
                            cache_PreviewMediaElementProgressObject = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_PreviewMediaElementProgressObject;
                        }
                    }
                }
                public void RegisterTwoWayListener_11(global::Windows.UI.Xaml.Controls.Slider sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Primitives.RangeBase.ValueProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_11_Value();
                        }
                    });
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 7: // Views\Project\SlideshowClipView.xaml line 185
                {
                    this.AddAppBarButton = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                }
                break;
            case 9: // Views\Project\SlideshowClipView.xaml line 164
                {
                    global::Windows.UI.Xaml.Controls.Grid element9 = (global::Windows.UI.Xaml.Controls.Grid)(target);
                    ((global::Windows.UI.Xaml.Controls.Grid)element9).RightTapped += this.OpenFlyoutMenu;
                    ((global::Windows.UI.Xaml.Controls.Grid)element9).Holding += this.OpenFlyoutMenu;
                }
                break;
            case 13: // Views\Project\SlideshowClipView.xaml line 93
                {
                    this.PreviewMediaElement = (global::Windows.UI.Xaml.Controls.MediaElement)(target);
                    ((global::Windows.UI.Xaml.Controls.MediaElement)this.PreviewMediaElement).Loaded += this.PreviewMediaElement_Loaded;
                    ((global::Windows.UI.Xaml.Controls.MediaElement)this.PreviewMediaElement).MediaOpened += this.PreviewMediaElement_MediaOpened;
                    ((global::Windows.UI.Xaml.Controls.MediaElement)this.PreviewMediaElement).CurrentStateChanged += this.PreviewMediaElement_CurrentStateChanged;
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // Views\Project\SlideshowClipView.xaml line 1
                {                    
                    global::Windows.UI.Xaml.Controls.UserControl element1 = (global::Windows.UI.Xaml.Controls.UserControl)target;
                    SlideshowClipView_obj1_Bindings bindings = new SlideshowClipView_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    bindings.SetConverterLookupRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                }
                break;
            case 9: // Views\Project\SlideshowClipView.xaml line 164
                {                    
                    global::Windows.UI.Xaml.Controls.Grid element9 = (global::Windows.UI.Xaml.Controls.Grid)target;
                    SlideshowClipView_obj9_Bindings bindings = new SlideshowClipView_obj9_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element9.DataContext);
                    element9.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element9, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element9, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

