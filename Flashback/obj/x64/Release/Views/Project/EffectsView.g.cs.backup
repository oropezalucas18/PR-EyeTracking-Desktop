#pragma checksum "C:\Users\Lucas Oropeza\Documents\PR-EYE TRACKING\Flashback-master\Flashback\Views\Project\EffectsView.xaml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "2ABEF8CE2D60E3ED5C78028CE928BDE7478AC580A6639932FC1629F134EF5987"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Flashback.Views
{
    partial class EffectsView : 
        global::Windows.UI.Xaml.Controls.UserControl, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(global::Windows.UI.Xaml.Controls.ItemsControl obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.ItemsSource = value;
            }
            public static void Set_Helpers_Controls_ProgressOverlay_ProgressObject(global::Helpers.Controls.ProgressOverlay obj, global::Helpers.Controls.ProgressObject value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Helpers.Controls.ProgressObject) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Helpers.Controls.ProgressObject), targetNullValue);
                }
                obj.ProgressObject = value;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class EffectsView_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IEffectsView_Bindings
        {
            private global::Flashback.Views.EffectsView dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::Windows.UI.Xaml.Controls.ListView obj5;
            private global::Helpers.Controls.ProgressOverlay obj10;

            private EffectsView_obj1_BindingsTracking bindingsTracking;

            public EffectsView_obj1_Bindings()
            {
                this.bindingsTracking = new EffectsView_obj1_BindingsTracking(this);
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 5: // Views\Project\EffectsView.xaml line 131
                        this.obj5 = (global::Windows.UI.Xaml.Controls.ListView)target;
                        break;
                    case 10: // Views\Project\EffectsView.xaml line 101
                        this.obj10 = (global::Helpers.Controls.ProgressOverlay)target;
                        break;
                    default:
                        break;
                }
            }

            // IEffectsView_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::Flashback.Views.EffectsView)newDataRoot;
                    return true;
                }
                return false;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::Flashback.Views.EffectsView obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ProjectViewModel(obj.ProjectViewModel, phase);
                        this.Update_PreviewMediaElementProgressObject(obj.PreviewMediaElementProgressObject, phase);
                    }
                }
            }
            private void Update_ProjectViewModel(global::Flashback.ViewModels.ProjectViewModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ProjectViewModel(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ProjectViewModel_EffectReferenceCategories(obj.EffectReferenceCategories, phase);
                    }
                }
            }
            private void Update_ProjectViewModel_EffectReferenceCategories(global::System.Collections.ObjectModel.ObservableCollection<global::Flashback.Effects.EffectReferenceCategory> obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ProjectViewModel_EffectReferenceCategories(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Project\EffectsView.xaml line 131
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj5, obj, null);
                }
            }
            private void Update_PreviewMediaElementProgressObject(global::Helpers.Controls.ProgressObject obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_PreviewMediaElementProgressObject(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Project\EffectsView.xaml line 101
                    XamlBindingSetters.Set_Helpers_Controls_ProgressOverlay_ProgressObject(this.obj10, obj, null);
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class EffectsView_obj1_BindingsTracking
            {
                private global::System.WeakReference<EffectsView_obj1_Bindings> weakRefToBindingObj; 

                public EffectsView_obj1_BindingsTracking(EffectsView_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<EffectsView_obj1_Bindings>(obj);
                }

                public EffectsView_obj1_Bindings TryGetBindingObject()
                {
                    EffectsView_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_ProjectViewModel(null);
                    UpdateChildListeners_ProjectViewModel_EffectReferenceCategories(null);
                    UpdateChildListeners_PreviewMediaElementProgressObject(null);
                }

                public void PropertyChanged_ProjectViewModel(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    EffectsView_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Flashback.ViewModels.ProjectViewModel obj = sender as global::Flashback.ViewModels.ProjectViewModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_ProjectViewModel_EffectReferenceCategories(obj.EffectReferenceCategories, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "EffectReferenceCategories":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ProjectViewModel_EffectReferenceCategories(obj.EffectReferenceCategories, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::Flashback.ViewModels.ProjectViewModel cache_ProjectViewModel = null;
                public void UpdateChildListeners_ProjectViewModel(global::Flashback.ViewModels.ProjectViewModel obj)
                {
                    if (obj != cache_ProjectViewModel)
                    {
                        if (cache_ProjectViewModel != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ProjectViewModel).PropertyChanged -= PropertyChanged_ProjectViewModel;
                            cache_ProjectViewModel = null;
                        }
                        if (obj != null)
                        {
                            cache_ProjectViewModel = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ProjectViewModel;
                        }
                    }
                }
                public void PropertyChanged_ProjectViewModel_EffectReferenceCategories(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    EffectsView_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::System.Collections.ObjectModel.ObservableCollection<global::Flashback.Effects.EffectReferenceCategory> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::Flashback.Effects.EffectReferenceCategory>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void CollectionChanged_ProjectViewModel_EffectReferenceCategories(object sender, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    EffectsView_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::System.Collections.ObjectModel.ObservableCollection<global::Flashback.Effects.EffectReferenceCategory> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::Flashback.Effects.EffectReferenceCategory>;
                    }
                }
                private global::System.Collections.ObjectModel.ObservableCollection<global::Flashback.Effects.EffectReferenceCategory> cache_ProjectViewModel_EffectReferenceCategories = null;
                public void UpdateChildListeners_ProjectViewModel_EffectReferenceCategories(global::System.Collections.ObjectModel.ObservableCollection<global::Flashback.Effects.EffectReferenceCategory> obj)
                {
                    if (obj != cache_ProjectViewModel_EffectReferenceCategories)
                    {
                        if (cache_ProjectViewModel_EffectReferenceCategories != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ProjectViewModel_EffectReferenceCategories).PropertyChanged -= PropertyChanged_ProjectViewModel_EffectReferenceCategories;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)cache_ProjectViewModel_EffectReferenceCategories).CollectionChanged -= CollectionChanged_ProjectViewModel_EffectReferenceCategories;
                            cache_ProjectViewModel_EffectReferenceCategories = null;
                        }
                        if (obj != null)
                        {
                            cache_ProjectViewModel_EffectReferenceCategories = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ProjectViewModel_EffectReferenceCategories;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)obj).CollectionChanged += CollectionChanged_ProjectViewModel_EffectReferenceCategories;
                        }
                    }
                }
                public void PropertyChanged_PreviewMediaElementProgressObject(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    EffectsView_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Helpers.Controls.ProgressObject obj = sender as global::Helpers.Controls.ProgressObject;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::Helpers.Controls.ProgressObject cache_PreviewMediaElementProgressObject = null;
                public void UpdateChildListeners_PreviewMediaElementProgressObject(global::Helpers.Controls.ProgressObject obj)
                {
                    if (obj != cache_PreviewMediaElementProgressObject)
                    {
                        if (cache_PreviewMediaElementProgressObject != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_PreviewMediaElementProgressObject).PropertyChanged -= PropertyChanged_PreviewMediaElementProgressObject;
                            cache_PreviewMediaElementProgressObject = null;
                        }
                        if (obj != null)
                        {
                            cache_PreviewMediaElementProgressObject = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_PreviewMediaElementProgressObject;
                        }
                    }
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 4: // Views\Project\EffectsView.xaml line 108
                {
                    this.SelectedEffectControl = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 5: // Views\Project\EffectsView.xaml line 131
                {
                    this.EffectCategoriesListView = (global::Windows.UI.Xaml.Controls.ListView)(target);
                    ((global::Windows.UI.Xaml.Controls.ListView)this.EffectCategoriesListView).Loaded += this.EffectCategoriesListView_Loaded;
                }
                break;
            case 7: // Views\Project\EffectsView.xaml line 147
                {
                    this.EffectsGridView = (global::Windows.UI.Xaml.Controls.GridView)(target);
                    ((global::Windows.UI.Xaml.Controls.GridView)this.EffectsGridView).SelectionChanged += this.EffectsGridView_SelectionChanged;
                }
                break;
            case 9: // Views\Project\EffectsView.xaml line 88
                {
                    this.PreviewMediaElement = (global::Windows.UI.Xaml.Controls.MediaElement)(target);
                    ((global::Windows.UI.Xaml.Controls.MediaElement)this.PreviewMediaElement).Loaded += this.PreviewMediaElement_Loaded;
                    ((global::Windows.UI.Xaml.Controls.MediaElement)this.PreviewMediaElement).MediaOpened += this.PreviewMediaElement_MediaOpened;
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // Views\Project\EffectsView.xaml line 1
                {                    
                    global::Windows.UI.Xaml.Controls.UserControl element1 = (global::Windows.UI.Xaml.Controls.UserControl)target;
                    EffectsView_obj1_Bindings bindings = new EffectsView_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                }
                break;
            }
            return returnValue;
        }
    }
}

