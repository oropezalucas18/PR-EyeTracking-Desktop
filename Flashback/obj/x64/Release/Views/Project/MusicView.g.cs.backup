#pragma checksum "C:\Users\Lucas Oropeza\Documents\PR-EYE TRACKING\Flashback-master\Flashback\Views\Project\MusicView.xaml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "E838CBFB71A1D86ED8D00AC0ED5E8E992B302B299B7951F5BCF3E3733BB3ACA0"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Flashback.Views
{
    partial class MusicView : 
        global::Windows.UI.Xaml.Controls.UserControl, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Windows_UI_Xaml_Controls_TextBlock_Text(global::Windows.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_Windows_UI_Xaml_Controls_ToggleSwitch_IsOn(global::Windows.UI.Xaml.Controls.ToggleSwitch obj, global::System.Boolean value)
            {
                obj.IsOn = value;
            }
            public static void Set_Helpers_Controls_RangeSlider_Maximum(global::Helpers.Controls.RangeSlider obj, global::System.Double value)
            {
                obj.Maximum = value;
            }
            public static void Set_Helpers_Controls_RangeSlider_End(global::Helpers.Controls.RangeSlider obj, global::System.Double value)
            {
                obj.End = value;
            }
            public static void Set_Helpers_Controls_RangeSlider_Start(global::Helpers.Controls.RangeSlider obj, global::System.Double value)
            {
                obj.Start = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Primitives_RangeBase_Value(global::Windows.UI.Xaml.Controls.Primitives.RangeBase obj, global::System.Double value)
            {
                obj.Value = value;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class MusicView_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IMusicView_Bindings
        {
            private global::Flashback.Views.MusicView dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private global::Windows.UI.Xaml.ResourceDictionary localResources;
            private global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement> converterLookupRoot;

            // Fields for each control that has bindings.
            private global::Windows.UI.Xaml.Controls.TextBlock obj27;
            private global::Windows.UI.Xaml.Controls.ToggleSwitch obj28;
            private global::Windows.UI.Xaml.Controls.Button obj31;
            private global::Helpers.Controls.RangeSlider obj32;
            private global::Windows.UI.Xaml.Controls.TextBlock obj33;
            private global::Windows.UI.Xaml.Controls.Slider obj34;
            private global::Windows.UI.Xaml.Controls.Slider obj35;
            private global::Windows.UI.Xaml.Controls.Button obj36;
            private global::Windows.UI.Xaml.Controls.Button obj37;

            // Fields for each event bindings event handler.
            private global::Windows.UI.Xaml.RoutedEventHandler obj31Click;
            private global::Windows.UI.Xaml.RoutedEventHandler obj36Click;
            private global::Windows.UI.Xaml.RoutedEventHandler obj37Click;

            private MusicView_obj1_BindingsTracking bindingsTracking;

            public MusicView_obj1_Bindings()
            {
                this.bindingsTracking = new MusicView_obj1_BindingsTracking(this);
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 27: // Views\Project\MusicView.xaml line 203
                        this.obj27 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 28: // Views\Project\MusicView.xaml line 221
                        this.obj28 = (global::Windows.UI.Xaml.Controls.ToggleSwitch)target;
                        this.bindingsTracking.RegisterTwoWayListener_28(this.obj28);
                        break;
                    case 31: // Views\Project\MusicView.xaml line 270
                        this.obj31 = (global::Windows.UI.Xaml.Controls.Button)target;
                        this.obj31Click = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.PlayStop();
                        };
                        ((global::Windows.UI.Xaml.Controls.Button)target).Click += obj31Click;
                        break;
                    case 32: // Views\Project\MusicView.xaml line 279
                        this.obj32 = (global::Helpers.Controls.RangeSlider)target;
                        this.bindingsTracking.RegisterTwoWayListener_32(this.obj32);
                        break;
                    case 33: // Views\Project\MusicView.xaml line 254
                        this.obj33 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 34: // Views\Project\MusicView.xaml line 243
                        this.obj34 = (global::Windows.UI.Xaml.Controls.Slider)target;
                        this.bindingsTracking.RegisterTwoWayListener_34(this.obj34);
                        break;
                    case 35: // Views\Project\MusicView.xaml line 233
                        this.obj35 = (global::Windows.UI.Xaml.Controls.Slider)target;
                        this.bindingsTracking.RegisterTwoWayListener_35(this.obj35);
                        break;
                    case 36: // Views\Project\MusicView.xaml line 209
                        this.obj36 = (global::Windows.UI.Xaml.Controls.Button)target;
                        this.obj36Click = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.ProjectViewModel.PickTrack();
                        };
                        ((global::Windows.UI.Xaml.Controls.Button)target).Click += obj36Click;
                        break;
                    case 37: // Views\Project\MusicView.xaml line 213
                        this.obj37 = (global::Windows.UI.Xaml.Controls.Button)target;
                        this.obj37Click = (global::System.Object p0, global::Windows.UI.Xaml.RoutedEventArgs p1) =>
                        {
                            this.dataRoot.ProjectViewModel.CreateTrack();
                        };
                        ((global::Windows.UI.Xaml.Controls.Button)target).Click += obj37Click;
                        break;
                    default:
                        break;
                }
            }

            // IMusicView_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::Flashback.Views.MusicView)newDataRoot;
                    return true;
                }
                return false;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }
            public void SetConverterLookupRoot(global::Windows.UI.Xaml.FrameworkElement rootElement)
            {
                this.converterLookupRoot = new global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement>(rootElement);
            }

            public global::Windows.UI.Xaml.Data.IValueConverter LookupConverter(string key)
            {
                if (this.localResources == null)
                {
                    global::Windows.UI.Xaml.FrameworkElement rootElement;
                    this.converterLookupRoot.TryGetTarget(out rootElement);
                    this.localResources = rootElement.Resources;
                    this.converterLookupRoot = null;
                }
                return (global::Windows.UI.Xaml.Data.IValueConverter) (this.localResources.ContainsKey(key) ? this.localResources[key] : global::Windows.UI.Xaml.Application.Current.Resources[key]);
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::Flashback.Views.MusicView obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ProjectViewModel(obj.ProjectViewModel, phase);
                    }
                }
            }
            private void Update_ProjectViewModel(global::Flashback.ViewModels.ProjectViewModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ProjectViewModel(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ProjectViewModel_Project(obj.Project, phase);
                    }
                }
            }
            private void Update_ProjectViewModel_Project(global::Flashback.Models.Project obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ProjectViewModel_Project(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ProjectViewModel_Project_Track(obj.Track, phase);
                    }
                }
            }
            private void Update_ProjectViewModel_Project_Track(global::Flashback.Models.Track obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ProjectViewModel_Project_Track(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ProjectViewModel_Project_Track_Path(obj.Path, phase);
                        this.Update_ProjectViewModel_Project_Track_FadeIn(obj.FadeIn, phase);
                        this.Update_ProjectViewModel_Project_Track_Duration(obj.Duration, phase);
                        this.Update_ProjectViewModel_Project_Track_StartTime(obj.StartTime, phase);
                        this.Update_ProjectViewModel_Project_Track_VideoVolume(obj.VideoVolume, phase);
                        this.Update_ProjectViewModel_Project_Track_MusicVolume(obj.MusicVolume, phase);
                    }
                }
            }
            private void Update_ProjectViewModel_Project_Track_Path(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Project\MusicView.xaml line 203
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj27, obj, null);
                }
            }
            private void Update_ProjectViewModel_Project_Track_FadeIn(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Project\MusicView.xaml line 221
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ToggleSwitch_IsOn(this.obj28, (global::System.Boolean)this.LookupConverter("NullableBooleanToBooleanConverter").Convert(obj, typeof(global::System.Boolean), null, null));
                }
            }
            private void Update_ProjectViewModel_Project_Track_Duration(global::System.TimeSpan obj, int phase)
            {
                if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                {
                    this.Update_ProjectViewModel_Project_Track_Duration_TotalSeconds(obj.TotalSeconds, phase);
                }
            }
            private void Update_ProjectViewModel_Project_Track_Duration_TotalSeconds(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Project\MusicView.xaml line 279
                    XamlBindingSetters.Set_Helpers_Controls_RangeSlider_Maximum(this.obj32, obj);
                    // Views\Project\MusicView.xaml line 279
                    XamlBindingSetters.Set_Helpers_Controls_RangeSlider_End(this.obj32, obj);
                }
            }
            private void Update_ProjectViewModel_Project_Track_StartTime(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Project\MusicView.xaml line 279
                    XamlBindingSetters.Set_Helpers_Controls_RangeSlider_Start(this.obj32, obj);
                    // Views\Project\MusicView.xaml line 254
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj33, (global::System.String)this.LookupConverter("SecondsToTimeSpanStringConverter").Convert(obj, typeof(global::System.String), null, null), null);
                }
            }
            private void Update_ProjectViewModel_Project_Track_VideoVolume(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Project\MusicView.xaml line 243
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_RangeBase_Value(this.obj34, obj);
                }
            }
            private void Update_ProjectViewModel_Project_Track_MusicVolume(global::System.Double obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\Project\MusicView.xaml line 233
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_RangeBase_Value(this.obj35, obj);
                }
            }
            private void UpdateTwoWay_28_IsOn()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ProjectViewModel != null)
                        {
                            if (this.dataRoot.ProjectViewModel.Project != null)
                            {
                                if (this.dataRoot.ProjectViewModel.Project.Track != null)
                                {
                                    this.dataRoot.ProjectViewModel.Project.Track.FadeIn = (global::System.Boolean)this.LookupConverter("NullableBooleanToBooleanConverter").ConvertBack(this.obj28.IsOn, typeof(global::System.Boolean), null, null);
                                }
                            }
                        }
                    }
                }
            }
            private void UpdateTwoWay_32_Start()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ProjectViewModel != null)
                        {
                            if (this.dataRoot.ProjectViewModel.Project != null)
                            {
                                if (this.dataRoot.ProjectViewModel.Project.Track != null)
                                {
                                    this.dataRoot.ProjectViewModel.Project.Track.StartTime = this.obj32.Start;
                                }
                            }
                        }
                    }
                }
            }
            private void UpdateTwoWay_34_Value()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ProjectViewModel != null)
                        {
                            if (this.dataRoot.ProjectViewModel.Project != null)
                            {
                                if (this.dataRoot.ProjectViewModel.Project.Track != null)
                                {
                                    this.dataRoot.ProjectViewModel.Project.Track.VideoVolume = this.obj34.Value;
                                }
                            }
                        }
                    }
                }
            }
            private void UpdateTwoWay_35_Value()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ProjectViewModel != null)
                        {
                            if (this.dataRoot.ProjectViewModel.Project != null)
                            {
                                if (this.dataRoot.ProjectViewModel.Project.Track != null)
                                {
                                    this.dataRoot.ProjectViewModel.Project.Track.MusicVolume = this.obj35.Value;
                                }
                            }
                        }
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class MusicView_obj1_BindingsTracking
            {
                private global::System.WeakReference<MusicView_obj1_Bindings> weakRefToBindingObj; 

                public MusicView_obj1_BindingsTracking(MusicView_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<MusicView_obj1_Bindings>(obj);
                }

                public MusicView_obj1_Bindings TryGetBindingObject()
                {
                    MusicView_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_ProjectViewModel(null);
                    UpdateChildListeners_ProjectViewModel_Project(null);
                    UpdateChildListeners_ProjectViewModel_Project_Track(null);
                }

                public void PropertyChanged_ProjectViewModel(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    MusicView_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Flashback.ViewModels.ProjectViewModel obj = sender as global::Flashback.ViewModels.ProjectViewModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_ProjectViewModel_Project(obj.Project, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "Project":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ProjectViewModel_Project(obj.Project, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::Flashback.ViewModels.ProjectViewModel cache_ProjectViewModel = null;
                public void UpdateChildListeners_ProjectViewModel(global::Flashback.ViewModels.ProjectViewModel obj)
                {
                    if (obj != cache_ProjectViewModel)
                    {
                        if (cache_ProjectViewModel != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ProjectViewModel).PropertyChanged -= PropertyChanged_ProjectViewModel;
                            cache_ProjectViewModel = null;
                        }
                        if (obj != null)
                        {
                            cache_ProjectViewModel = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ProjectViewModel;
                        }
                    }
                }
                public void PropertyChanged_ProjectViewModel_Project(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    MusicView_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Flashback.Models.Project obj = sender as global::Flashback.Models.Project;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_ProjectViewModel_Project_Track(obj.Track, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "Track":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ProjectViewModel_Project_Track(obj.Track, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::Flashback.Models.Project cache_ProjectViewModel_Project = null;
                public void UpdateChildListeners_ProjectViewModel_Project(global::Flashback.Models.Project obj)
                {
                    if (obj != cache_ProjectViewModel_Project)
                    {
                        if (cache_ProjectViewModel_Project != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ProjectViewModel_Project).PropertyChanged -= PropertyChanged_ProjectViewModel_Project;
                            cache_ProjectViewModel_Project = null;
                        }
                        if (obj != null)
                        {
                            cache_ProjectViewModel_Project = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ProjectViewModel_Project;
                        }
                    }
                }
                public void PropertyChanged_ProjectViewModel_Project_Track(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    MusicView_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::Flashback.Models.Track obj = sender as global::Flashback.Models.Track;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_ProjectViewModel_Project_Track_Path(obj.Path, DATA_CHANGED);
                                bindings.Update_ProjectViewModel_Project_Track_FadeIn(obj.FadeIn, DATA_CHANGED);
                                bindings.Update_ProjectViewModel_Project_Track_Duration(obj.Duration, DATA_CHANGED);
                                bindings.Update_ProjectViewModel_Project_Track_StartTime(obj.StartTime, DATA_CHANGED);
                                bindings.Update_ProjectViewModel_Project_Track_VideoVolume(obj.VideoVolume, DATA_CHANGED);
                                bindings.Update_ProjectViewModel_Project_Track_MusicVolume(obj.MusicVolume, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "Path":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ProjectViewModel_Project_Track_Path(obj.Path, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "FadeIn":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ProjectViewModel_Project_Track_FadeIn(obj.FadeIn, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Duration":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ProjectViewModel_Project_Track_Duration(obj.Duration, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "StartTime":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ProjectViewModel_Project_Track_StartTime(obj.StartTime, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "VideoVolume":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ProjectViewModel_Project_Track_VideoVolume(obj.VideoVolume, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "MusicVolume":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ProjectViewModel_Project_Track_MusicVolume(obj.MusicVolume, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::Flashback.Models.Track cache_ProjectViewModel_Project_Track = null;
                public void UpdateChildListeners_ProjectViewModel_Project_Track(global::Flashback.Models.Track obj)
                {
                    if (obj != cache_ProjectViewModel_Project_Track)
                    {
                        if (cache_ProjectViewModel_Project_Track != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ProjectViewModel_Project_Track).PropertyChanged -= PropertyChanged_ProjectViewModel_Project_Track;
                            cache_ProjectViewModel_Project_Track = null;
                        }
                        if (obj != null)
                        {
                            cache_ProjectViewModel_Project_Track = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ProjectViewModel_Project_Track;
                        }
                    }
                }
                public void RegisterTwoWayListener_28(global::Windows.UI.Xaml.Controls.ToggleSwitch sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.ToggleSwitch.IsOnProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_28_IsOn();
                        }
                    });
                }
                public void RegisterTwoWayListener_32(global::Helpers.Controls.RangeSlider sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Helpers.Controls.RangeSlider.StartProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_32_Start();
                        }
                    });
                }
                public void RegisterTwoWayListener_34(global::Windows.UI.Xaml.Controls.Slider sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Primitives.RangeBase.ValueProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_34_Value();
                        }
                    });
                }
                public void RegisterTwoWayListener_35(global::Windows.UI.Xaml.Controls.Slider sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.Primitives.RangeBase.ValueProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_35_Value();
                        }
                    });
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 29: // Views\Project\MusicView.xaml line 225
                {
                    this.VolumesStackPanel = (global::Windows.UI.Xaml.Controls.StackPanel)(target);
                }
                break;
            case 30: // Views\Project\MusicView.xaml line 265
                {
                    this.PreviewMediaElement = (global::Windows.UI.Xaml.Controls.MediaElement)(target);
                    ((global::Windows.UI.Xaml.Controls.MediaElement)this.PreviewMediaElement).CurrentStateChanged += this.PreviewMediaElement_CurrentStateChanged;
                }
                break;
            case 31: // Views\Project\MusicView.xaml line 270
                {
                    this.PlayStopButton = (global::Windows.UI.Xaml.Controls.Button)(target);
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.685")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // Views\Project\MusicView.xaml line 1
                {                    
                    global::Windows.UI.Xaml.Controls.UserControl element1 = (global::Windows.UI.Xaml.Controls.UserControl)target;
                    MusicView_obj1_Bindings bindings = new MusicView_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    bindings.SetConverterLookupRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                }
                break;
            }
            return returnValue;
        }
    }
}

